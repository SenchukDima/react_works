{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/Transactions.js","components/Feedback/section.js","components/App/App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","Statistics","title","undefined","map","stat","style","backgroundColor","Math","random","toString","substring","toUpperCase","label","percentage","id","FriendList","friends","friend","isOnline","width","TransactionHistory","items","item","type","amount","currency","Section","goodFeedBack","neutralFeedBack","badFeedBack","good","neutral","bad","total","positivePercentage","visibility","onClick","padding","App","props","setState","prevState","console","log","state","bind","user","statisticalData","transactions","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ccefe1a.chunk.js","sourcesContent":["import React from 'react';\nimport T from 'prop-types';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt=\"user avatar\" className=\"avatar\" />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className=\"stats\">\n        <li>\n          <span className=\"profile-label\">Followers</span>\n          <span className=\"quantity\">{stats.followers}</span>\n        </li>\n        <li>\n          <span className=\"profile-label\">Views</span>\n          <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span className=\"profile-label\">Likes</span>\n          <span className=\"quantity\">{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: T.string.isRequired,\n  tag: T.string.isRequired,\n  location: T.string.isRequired,\n  avatar: T.string.isRequired,\n  stats: T.object.isRequired,\n};\n\nexport default Profile;\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n\r\n  return (\r\n    <section className=\"statistics\">\r\n   { title !== undefined && (\r\n    <h2 className=\"title\">{title}</h2>\r\n    )}\r\n    <ul className=\"stat-list\">\r\n        {stats.map(stat => (  \r\n          <li className=\"item\" key={stat.id} style={{backgroundColor: '#' + (Math.random().toString(16) + '000000').substring(2,8).toUpperCase()}}>\r\n          <span className=\"label\">{stat.label}</span>\r\n          <span className=\"percentage\">{stat.percentage} %</span>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  </section>\r\n  );\r\n};\r\n\r\n\r\nStatistics.propTypes = {\r\n  title: T.string.isRequired,\r\n  stats: T.array.isRequired\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\nimport T from 'prop-types';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(friend => (\n        <li className=\"friend-list_item\" key={friend.id}>\n          {friend.isOnline ? (\n            <span className=\"status\" style={{ backgroundColor: 'green' }} />\n          ) : (\n            <span className=\"status\" style={{ backgroundColor: 'red' }} />\n          )}\n          <img\n            className=\" friend-list_avatar\"\n            src={friend.avatar}\n            alt=\"\"\n            width=\"95\"\n          />\n          <p className=\"friend-list_name\">{friend.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: T.array.isRequired,\n};\n\nexport default FriendList;\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n\r\n  return (\r\n    <table className=\"transaction-history\">\r\n  <thead className=\"transaction-history_head\">\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n  \r\n  <tbody>\r\n  {items.map(item => ( \r\n    <tr key={item.id}>\r\n  <td>{item.type}</td>\r\n      <td>{item.amount}</td>\r\n      <td>{item.currency}</td>\r\n    </tr>\r\n        ))}\r\n</tbody>\r\n</table>\r\n  );\r\n};\r\n\r\n\r\nTransactionHistory.propTypes = {\r\n    items: T.array.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;","import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nconst Section = ({\r\n  goodFeedBack,\r\n  neutralFeedBack,\r\n  badFeedBack,\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n  visibility\r\n}) => {\r\n  \r\n  if(visibility){\r\n    return (\r\n      <>\r\n        <h2>Please leave feedback!</h2>\r\n        \r\n        <button onClick={goodFeedBack} type=\"button\">\r\n          Good\r\n        </button>\r\n        <button onClick={neutralFeedBack} type=\"button\">\r\n          Neutral\r\n        </button>\r\n        <button onClick={badFeedBack} type=\"button\">\r\n          Bad\r\n        </button>\r\n        <h3>Statistics</h3> <div>\r\n          <span style={{ padding: 10 }}>Good: {good}</span>\r\n          <span style={{ padding: 10 }}>Neutral: {neutral}</span>\r\n          <span style={{ padding: 10 }}>Bad: {bad}</span>\r\n          <span style={{ padding: 10 }}>Total: {total}</span>\r\n          <span style={{ padding: 10 }}>\r\n            Positive feedback: {positivePercentage}%\r\n          </span>\r\n        </div>\r\n        </>\r\n    )\r\n  } else {\r\n    return (\r\n      <>\r\n        <h2>Please leave feedback!</h2>\r\n        \r\n        <button onClick={goodFeedBack} type=\"button\">\r\n          Good\r\n        </button>\r\n        <button onClick={neutralFeedBack} type=\"button\">\r\n          Neutral\r\n        </button>\r\n        <button onClick={badFeedBack} type=\"button\">\r\n          Bad\r\n        </button>\r\n        <h3>Statistics</h3> \r\n        <p>There is no feedback</p> \r\n        \r\n      </>\r\n    );\r\n    }\r\n};\r\n\r\nSection.propTypes = {\r\n  goodFeedBack: T.func.isRequired,\r\n  neutralFeedBack: T.func.isRequired,\r\n  badFeedBack: T.func.isRequired,\r\n  openSection: T.func.isRequired,\r\n  good: T.func.isRequired,\r\n  neutral: T.func.isRequired,\r\n  bad: T.func.isRequired,\r\n  total: T.func.isRequired,\r\n  positivePercentage: T.func.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport Profile from \"../Profile/Profile\";\nimport user from \"../Profile/user.json\";\nimport Statistics from \"../Statistics/Statistics\";\nimport statisticalData from \"../Statistics/statistical-data.json\";\nimport FriendList from \"../FriendList/FriendList\";\nimport friends from \"../FriendList/friends.json\";\nimport TransactionHistory from \"../TransactionHistory/Transactions\";\nimport transactions from \"../TransactionHistory/transactions.json\";\nimport Section from \"../Feedback/section\";\n// import FeedbackOptions from \"../Feedback/feedback\";\n// import FeedbackStatistics from '../Feedback/counter';\n\nexport default class App extends Component {\n\n  \n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visibility: false,\n      good: 0,\n      neutral: 0,\n      bad: 0,\n      total: 0,\n      positivePercentage: 0,\n    };\n    this.goodFeedBack = this.goodFeedBack.bind(this)\n    this.neutralFeedBack = this.neutralFeedBack.bind(this)\n    this.badFeedBack = this.badFeedBack.bind(this)\n  }\n\n  goodFeedBack = () => {\n    this.setState(\n      prevState => ({visibility: true,\n         good: ++prevState.good, \n        total: ++prevState.total, \n        positivePercentage: prevState.good*100/prevState.total, }),\n      () => {\n        console.log(this.state.good);\n      },\n    );\n  };\n\n  neutralFeedBack = () => {\n    this.setState(\n      prevState => ({ visibility: true,\n        neutral: ++prevState.neutral, \n        total: ++prevState.total,\n        positivePercentage: prevState.good*100/prevState.total,\n       }),\n      () => {\n        console.log(this.state.neutral);\n      },\n    );\n  };\n\n  badFeedBack = () => {\n    this.setState(\n      prevState => ({\n        visibility: true,\n        bad: ++prevState.bad, \n        total: ++prevState.total,\n        positivePercentage: prevState.good*100/prevState.total,\n       }),\n      () => {\n        console.log(this.state.bad);\n      },\n    );\n  };\n\n  render() {\n\n\n    return (\n      <>\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\n        <FriendList friends={friends} />\n        <TransactionHistory items={transactions} />\n        <Section title=\"Please leave feedback!\"\n         \n            goodFeedBack={this.goodFeedBack}\n            neutralFeedBack={this.neutralFeedBack}\n            badFeedBack={this.badFeedBack}\n        visibility= {this.state.visibility}\n        good={this.state.good}\n        neutral={this.state.neutral}\n        bad={this.state.bad}\n        total={this.state.total}\n        positivePercentage={this.state.positivePercentage} \n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\nimport './components/Profile/Profile.css';\nimport './components/Statistics/Statistics.css';\nimport './components/FriendList/FriendList.css';\nimport './components/TransactionHistory/Transactions.css';\n\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root'),\n  );\n"],"sourceRoot":""}